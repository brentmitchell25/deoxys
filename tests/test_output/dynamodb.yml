AWSTemplateFormatVersion: '2010-09-09'
Resources:
  Table1dynamodb:
    Properties:
      AttributeDefinitions:
      - AttributeName: ResultKey
        AttributeType: S
      KeySchema:
      - AttributeName: ResultKey
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      TableName: Table1
    Type: AWS::DynamoDB::Table
  Table2dynamodb:
    Properties:
      AttributeDefinitions:
      - AttributeName: PartKey
        AttributeType: S
      - AttributeName: SortKey
        AttributeType: S
      KeySchema:
      - AttributeName: PartKey
        KeyType: HASH
      - AttributeName: SortKey
        KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      TableName: Table2
      TimeToLiveSpecification:
        AttributeName: TimeToLive
        Enabled: 'false'
    Type: AWS::DynamoDB::Table
  Table3dynamodb:
    Properties:
      AttributeDefinitions:
      - AttributeName: PartKey
        AttributeType: S
      - AttributeName: SortKey
        AttributeType: S
      GlobalSecondaryIndexes:
      - IndexName: myGSI
        KeySchema:
        - AttributeName: NewHash
          KeyType: HASH
        - AttributeName: SortKey
          KeyType: RANGE
        Projection:
          NonKeyAttributes: [Album, NumberOfSongs]
          ProjectionType: INCLUDE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
      KeySchema:
      - AttributeName: PartKey
        KeyType: HASH
      - AttributeName: SortKey
        KeyType: RANGE
      LocalSecondaryIndexes:
      - IndexName: myLSI
        KeySchema:
        - AttributeName: Album
          KeyType: HASH
        - AttributeName: Sales
          KeyType: RANGE
        Projection:
          NonKeyAttributes: [Artist, NumberOfSongs]
          ProjectionType: INCLUDE
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 100
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      TableName: Table3
      TimeToLiveSpecification:
        AttributeName: TTL
        Enabled: 'true'
    Type: AWS::DynamoDB::Table
  TestFunctionTable3dynamodbEventSourceMapping:
    DependsOn: [Table3dynamodb, TestFunctionlambda]
    Properties:
      EventSourceArn: !GetAtt [Table3dynamodb, StreamArn]
      FunctionName: TestFunction
      StartingPosition: LATEST
    Type: AWS::Lambda::EventSourceMapping
  TestFunctionlambda:
    Properties:
      Code:
        ZipFile: 'exports.handler = (event, context, callback) => {

          console.log(JSON.stringify(event));

          callback(null, "some success message");

          };'
      Description: Used by dynamodb trigger
      FunctionName: TestFunction
      Handler: index.handler
      MemorySize: 128
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/TestRoleName'
      Runtime: nodejs6.10
      Timeout: '10'
    Type: AWS::Lambda::Function
